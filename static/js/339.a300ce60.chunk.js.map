{"version":3,"file":"static/js/339.a300ce60.chunk.js","mappings":"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","sources":["api.js","components/ReviewListItem/ReviewListItem.jsx","components/ReviewList/ReviewsList.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst options = new URLSearchParams({\n  api_key: '9cc860df4c5a2dfba823744e561a2dde',\n  language: 'en-US',\n});\n\nexport const fetchTrendMovies = async () => {\n  const res = await axios('trending/movie/day', {\n    params: options,\n  });\n  return await res.data;\n};\n\nexport const fetchMovieByName = async name => {\n  const res = await axios(`search/movie?query=${name}`, {\n    params: options,\n  });\n  return await res.data;\n};\n\nexport const fetchMovieById = async id => {\n  const res = await axios(`movie/${id}`, {\n    params: options,\n  });\n  return await res.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const res = await axios(`movie/${id}/credits`, {\n    params: options,\n  });\n  return res.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const res = await axios(`movie/${id}/reviews`, {\n    params: options,\n  });\n  return res.data;\n};\n","const ReviewListItem = ({ author, content }) => {\n  return (\n    <li>\n      <h2>\n        Author: <span>{author}</span>\n      </h2>\n      <p>{content}</p>\n    </li>\n  );\n};\n\nexport default ReviewListItem;\n","import { fetchMovieReviews } from 'api';\nimport ReviewListItem from 'components/ReviewListItem';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { useParams } from 'react-router-dom';\n\nconst ReviewsList = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        setIsLoading(true);\n        const res = await fetchMovieReviews(movieId);\n        setReviews(res);\n      } catch {\n        toast.error('Something went wrong! Reload page and try again!');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n  const { results } = reviews;\n  return (\n    <>\n      {isLoading && (\n        <RotatingLines\n          strokeColor=\"grey\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"46\"\n          visible={true}\n        />\n      )}\n      {results?.length === 0 && (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n      <ul>\n        {results?.map(({ author, content, id }) => {\n          return <ReviewListItem author={author} content={content} key={id} />;\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default ReviewsList;\n"],"names":["axios","options","URLSearchParams","api_key","language","fetchTrendMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","params","sent","data","abrupt","stop","apply","arguments","fetchMovieByName","_ref2","_callee2","name","_context2","concat","_x","fetchMovieById","_ref3","_callee3","id","_context3","_x2","fetchMovieCredits","_ref4","_callee4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","author","content","_jsxs","children","_jsx","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setIsLoading","useEffect","getReviews","t0","toast","finish","results","_Fragment","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","length","map","ReviewListItem"],"sourceRoot":""}